{
 "Resources": {
  "ChatbotApiChatbotHandlerServiceRole6FDBF377": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotBackend/ChatbotApi/ChatbotHandler/ServiceRole/Resource"
   }
  },
  "ChatbotApiChatbotHandlerServiceRoleDefaultPolicyB7D4EB5F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "bedrock:InvokeModel",
        "bedrock:ListFoundationModels"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ChatbotApiChatbotHandlerServiceRoleDefaultPolicyB7D4EB5F",
    "Roles": [
     {
      "Ref": "ChatbotApiChatbotHandlerServiceRole6FDBF377"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotBackend/ChatbotApi/ChatbotHandler/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ChatbotApiChatbotHandler38BEFADA": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "22f366ae66b18074185fe58d734996ee480e68d2f3e752d9f28ee638dfda70be.zip"
    },
    "Environment": {
     "Variables": {
      "CONTEXT_PROMPT": "Answer like I am 5 years old",
      "BEDROCK_MODEL_ID": "anthropic.claude-3-5-haiku-20241022-v1:0"
     }
    },
    "Handler": "chatbot.handler",
    "Role": {
     "Fn::GetAtt": [
      "ChatbotApiChatbotHandlerServiceRole6FDBF377",
      "Arn"
     ]
    },
    "Runtime": "python3.9"
   },
   "DependsOn": [
    "ChatbotApiChatbotHandlerServiceRoleDefaultPolicyB7D4EB5F",
    "ChatbotApiChatbotHandlerServiceRole6FDBF377"
   ],
   "Metadata": {
    "aws:cdk:path": "ChatbotBackend/ChatbotApi/ChatbotHandler/Resource",
    "aws:asset:path": "asset.22f366ae66b18074185fe58d734996ee480e68d2f3e752d9f28ee638dfda70be",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "ChatbotApiChatbotAPI8CA7BBB0": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "ChatbotAPI"
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotBackend/ChatbotApi/ChatbotAPI/Resource"
   }
  },
  "ChatbotApiChatbotAPICloudWatchRole68EDD3E5": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
       ]
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "ChatbotBackend/ChatbotApi/ChatbotAPI/CloudWatchRole/Resource"
   }
  },
  "ChatbotApiChatbotAPIAccountE90DF83A": {
   "Type": "AWS::ApiGateway::Account",
   "Properties": {
    "CloudWatchRoleArn": {
     "Fn::GetAtt": [
      "ChatbotApiChatbotAPICloudWatchRole68EDD3E5",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "ChatbotApiChatbotAPI8CA7BBB0"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "ChatbotBackend/ChatbotApi/ChatbotAPI/Account"
   }
  },
  "ChatbotApiChatbotAPIDeployment9B38922158087c47da9cb1a06d3387a80390ab58": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Automatically created by the RestApi construct",
    "RestApiId": {
     "Ref": "ChatbotApiChatbotAPI8CA7BBB0"
    }
   },
   "DependsOn": [
    "ChatbotApiChatbotAPIchatPOSTDCF430E6",
    "ChatbotApiChatbotAPIchat147B925F"
   ],
   "Metadata": {
    "aws:cdk:path": "ChatbotBackend/ChatbotApi/ChatbotAPI/Deployment/Resource"
   }
  },
  "ChatbotApiChatbotAPIDeploymentStageprodA452D0A7": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "ChatbotApiChatbotAPIDeployment9B38922158087c47da9cb1a06d3387a80390ab58"
    },
    "RestApiId": {
     "Ref": "ChatbotApiChatbotAPI8CA7BBB0"
    },
    "StageName": "prod"
   },
   "DependsOn": [
    "ChatbotApiChatbotAPIAccountE90DF83A"
   ],
   "Metadata": {
    "aws:cdk:path": "ChatbotBackend/ChatbotApi/ChatbotAPI/DeploymentStage.prod/Resource"
   }
  },
  "ChatbotApiChatbotAPIchat147B925F": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "ChatbotApiChatbotAPI8CA7BBB0",
      "RootResourceId"
     ]
    },
    "PathPart": "chat",
    "RestApiId": {
     "Ref": "ChatbotApiChatbotAPI8CA7BBB0"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotBackend/ChatbotApi/ChatbotAPI/Default/chat/Resource"
   }
  },
  "ChatbotApiChatbotAPIchatPOSTApiPermissionChatbotBackendChatbotApiChatbotAPI35156B46POSTchat8478D342": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ChatbotApiChatbotHandler38BEFADA",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ChatbotApiChatbotAPI8CA7BBB0"
       },
       "/",
       {
        "Ref": "ChatbotApiChatbotAPIDeploymentStageprodA452D0A7"
       },
       "/POST/chat"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotBackend/ChatbotApi/ChatbotAPI/Default/chat/POST/ApiPermission.ChatbotBackendChatbotApiChatbotAPI35156B46.POST..chat"
   }
  },
  "ChatbotApiChatbotAPIchatPOSTApiPermissionTestChatbotBackendChatbotApiChatbotAPI35156B46POSTchat986AB390": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ChatbotApiChatbotHandler38BEFADA",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ChatbotApiChatbotAPI8CA7BBB0"
       },
       "/test-invoke-stage/POST/chat"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotBackend/ChatbotApi/ChatbotAPI/Default/chat/POST/ApiPermission.Test.ChatbotBackendChatbotApiChatbotAPI35156B46.POST..chat"
   }
  },
  "ChatbotApiChatbotAPIchatPOSTDCF430E6": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ChatbotApiChatbotHandler38BEFADA",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ChatbotApiChatbotAPIchat147B925F"
    },
    "RestApiId": {
     "Ref": "ChatbotApiChatbotAPI8CA7BBB0"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotBackend/ChatbotApi/ChatbotAPI/Default/chat/POST/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1VQy27DIBD8Ft/xxkkOvdZJ1VOrRu4HRARvnY0xIAOKLOR/LwZHaU8zs5rZ1w622wpCVfC7LUXbl5IuEL4dFz2LpXMgPkBotER2/FEJT1qSmBaZ2czs/sytRWehXiBqOHjRoztwi0zy4dJyCDHw7pVwpFUK4ziQtVHNjBvquMM7nyB8JHuD1tWG0tAnrYXQXjn2hkbqacBIY/WPiot3adNMYlT7UWDa4yHWnpl/orvqdillNs9PXzpmaUSqWxxf3hnv/sUjP2rVkktnVCWX5sqhKl7Xd24WzA8ozRQHqNVySuLxj5llvdnDdgcvxc0SlWO8lAaEJuMvOWOJ56oBAAA="
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotBackend/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "ChatbotApiChatbotAPIEndpointE7D30CAB": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "ChatbotApiChatbotAPI8CA7BBB0"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "ChatbotApiChatbotAPIDeploymentStageprodA452D0A7"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}